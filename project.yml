title: "scispaCy pipeline"
description: "All the steps needed in the scispaCy pipeline"

vars:
  freqs_loc: "https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/gorc_subset.freqs"
  vectors_loc: "https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/data/pubmed_with_header.txt.gz"

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "project_data", "output"]

workflows:
  all-sm:
    - download
    - convert-shared
    - convert-sm
    - parser-tagger-train-sm
    - evaluate-parser-tagger-sm
    - ner-train-sm
    - evaluate-ner-sm
  all-md:
    - download
    - convert-shared
    - convert-md
    - vectors-init-md
    - parser-tagger-train-md
    - evaluate-parser-tagger-md
    - ner-train-md
    - evaluate-ner-md
  all-lg:
    - download
    - convert-shared
    - convert-lg
    - vectors-init-lg
    - parser-tagger-train-lg
    - evaluate-parser-tagger-lg
    - ner-train-lg
    - evaluate-ner-lg
  all-specialized-ner:
    - ner-train-specialized
    - evaluate-specialized-ner
  all:
    - download
    - convert-shared
    - convert-sm
    - convert-md
    - convert-lg
    - vectors-init-md
    - vectors-init-lg
    - parser-tagger-train-sm
    - parser-tagger-train-md
    - parser-tagger-train-lg
    - ner-train-sm
    - ner-train-md
    - ner-train-lg
    - ner-train-specialized
    - evaluate-parser-tagger-sm
    - evaluate-parser-tagger-md
    - evaluate-parser-tagger-lg
    - evaluate-ner-sm
    - evaluate-ner-md
    - evaluate-ner-lg
    - evaluate-specialized-ner

commands:
  - name: download
    help: "Download the necessary files"
    script:
      - "aws s3 cp s3://ai2-s2-scispacy/data/gorc_subset.freqs assets/gorc_subset.freqs --no-sign-request"
      - "aws s3 cp s3://ai2-s2-scispacy/data/pubmed_with_header.txt.gz assets/pubmed_with_header.txt.gz --no-sign-request"
      - "aws s3 cp s3://ai2-s2-scispacy/data/genia/train.json assets/genia_train.json --no-sign-request"
      - "aws s3 cp s3://ai2-s2-scispacy/data/genia/dev.json assets/genia_dev.json --no-sign-request"
      - "aws s3 cp s3://ai2-s2-scispacy/data/genia/test.json assets/genia_test.json --no-sign-request"
      - "aws s3 cp s3://ai2-s2-scispacy/data/en-core-web.tgz assets/en-core-web.tgz"
      - "tar -xzvf assets/en-core-web.tgz -C assets/"
      - "rm assets/en-core-web.tgz"
      - "aws s3 cp s3://ai2-s2-scispacy/data/med_mentions.tar.gz assets/med_mentions.tar.gz"
      - "tar -xzvf assets/med_mentions.tar.gz -C assets/"
      - "rm assets/med_mentions.tar.gz"
      - "aws s3 cp s3://ai2-s2-scispacy/data/ner/ assets --recursive --exclude '*' --include '*.tsv'"
    outputs:
      - "assets/gorc_subset.freqs"
      - "assets/pubmed_with_header.txt.gz"
      - "assets/genia_train.json"
      - "assets/genia_dev.json"
      - "assets/genia_test.json"
      - "assets/en-core-web/train"
      - "assets/en-core-web/dev"
      - "assets/en-core-web/test"
      - "assets/corpus_pubtator.txt"
      - "assets/BC5CDR-IOB/train.tsv"
      - "assets/BC5CDR-IOB/devel.tsv"
      - "assets/BC5CDR-IOB/test.tsv"
      - "assets/JNLPBA-IOB/train.tsv"
      - "assets/JNLPBA-IOB/devel.tsv"
      - "assets/JNLPBA-IOB/test.tsv"
      - "assets/CRAFT-IOB/train.tsv"
      - "assets/CRAFT-IOB/devel.tsv"
      - "assets/CRAFT-IOB/test.tsv"
      - "assets/BioNLP13CG-IOB/train.tsv"
      - "assets/BioNLP13CG-IOB/devel.tsv"
      - "assets/BioNLP13CG-IOB/test.tsv"

  - name: convert-shared
    help: "Convert the data to spaCy's format"
    script:
      - "spacy convert assets/genia_train.json project_data --converter json --file-type spacy"
      - "spacy convert assets/genia_dev.json project_data --converter json --file-type spacy"
      - "spacy convert assets/genia_test.json project_data --converter json --file-type spacy"
      - "spacy convert assets/en-core-web project_data --converter json --file-type spacy"
    deps:
      - "assets/genia_train.json"
      - "assets/genia_dev.json"
      - "assets/genia_test.json"
      - "assets/en-core-web"
    outputs:
      - "project_data/genia_train.spacy"
      - "project_data/genia_dev.spacy"
      - "project_data/genia_test.spacy"
      - "project_data/train"
      - "project_data/dev"
      - "project_data/test"

  - name: convert-sm
    help: "Convert the data to spaCy's format"
    script:
      - "python scripts/convert_freqs.py --input_path assets/gorc_subset.freqs --output_path project_data/vocab_sm.jsonl --min_word_frequency 1000"
    deps:
      - "assets/gorc_subset.freqs"
    outputs:
      - "project_data/vocab_sm.jsonl"

  - name: convert-md
    help: "Convert the data to spaCy's format"
    script:
      - "python scripts/convert_freqs.py --input_path assets/gorc_subset.freqs --output_path project_data/vocab_md.jsonl --min_word_frequency 150"
    deps:
      - "assets/gorc_subset.freqs"
    outputs:
      - "project_data/vocab_md.jsonl"

  - name: convert-lg
    help: "Convert the data to spaCy's format"
    script:
      - "python scripts/convert_freqs.py --input_path assets/gorc_subset.freqs --output_path project_data/vocab_lg.jsonl --min_word_frequency 50"
    deps:
      - "assets/gorc_subset.freqs"
    outputs:
      - "project_data/vocab_lg.jsonl"

  - name: vectors-init-md
    help: "Initialize the vectors"
    script:
      - "spacy init vectors en assets/pubmed_with_header.txt.gz output/en_core_sci_md_vectors --prune 50000 --name en_core_sci_md.vectors --lexemes-jsonl project_data/vocab_md.jsonl"
    deps:
      - "project_data/vocab_md.jsonl"
      - "assets/pubmed_with_header.txt.gz"
    outputs:
      - "output/en_core_sci_md_vectors"

  - name: vectors-init-lg
    help: "Initialize the vectors"
    script:
      - "spacy init vectors en assets/pubmed_with_header.txt.gz output/en_core_sci_lg_vectors --prune 600000 --name en_core_sci_lg.vectors --lexemes-jsonl project_data/vocab_lg.jsonl"
    deps:
      - "project_data/vocab_lg.jsonl"
      - "assets/pubmed_with_header.txt.gz"
    outputs:
      - "output/en_core_sci_lg_vectors"

  - name: parser-tagger-train-sm
    help: "Train the base models"
    script:
      - "spacy train configs/base_sm.cfg --output output/en_core_sci_sm_parser_tagger --code scispacy/base_project_code.py"
    deps:
      - "configs/base_sm.cfg"
      - "project_data/genia_train.spacy"
      - "project_data/genia_dev.spacy"
      - "project_data/genia_test.spacy"
      - "project_data/train"
    outputs:
      - "output/en_core_sci_sm_parser_tagger/model-best"

  - name: parser-tagger-train-md
    help: "Train the base models"
    script:
      - "spacy train configs/base_md.cfg --output output/en_core_sci_md_parser_tagger --code scispacy/base_project_code.py"
    deps:
      - "configs/base_md.cfg"
      - "project_data/genia_train.spacy"
      - "project_data/genia_dev.spacy"
      - "project_data/genia_test.spacy"
      - "project_data/train"
      - "output/en_core_sci_md_vectors"
    outputs:
      - "output/en_core_sci_md_parser_tagger/model-best"

  - name: parser-tagger-train-lg
    help: "Train the base models"
    script:
      - "spacy train configs/base_lg.cfg --output output/en_core_sci_lg_parser_tagger --code scispacy/base_project_code.py"
    deps:
      - "configs/base_lg.cfg"
      - "project_data/genia_train.spacy"
      - "project_data/genia_dev.spacy"
      - "project_data/genia_test.spacy"
      - "project_data/train"
      - "output/en_core_sci_lg_vectors"
    outputs:
      - "output/en_core_sci_lg_parser_tagger/model-best"
  
  - name: ner-train-sm
    help: "Train the main ner"
    script:
      - "spacy train configs/ner_sm.cfg --output output/en_core_sci_sm_ner --code scispacy/base_project_code.py"
    deps:
      - "configs/ner_sm.cfg"
      - "output/en_core_sci_sm_parser_tagger/model-best"
      - "assets/corpus_pubtator.txt"
    outputs:
      - "output/en_core_sci_sm_ner/model-best"

  - name: ner-train-md
    help: "Train the main ner"
    script:
      - "spacy train configs/ner_md.cfg --output output/en_core_sci_md_ner --code scispacy/base_project_code.py"
    deps:
      - "configs/ner_md.cfg"
      - "output/en_core_sci_md_parser_tagger/model-best"
      - "assets/corpus_pubtator.txt"
      - "output/en_core_sci_md_vectors"
    outputs:
      - "output/en_core_sci_md_ner/model-best"

  - name: ner-train-lg
    help: "Train the main ner"
    script:
      - "spacy train configs/ner_lg.cfg --output output/en_core_sci_lg_ner --code scispacy/base_project_code.py"
    deps:
      - "configs/ner_lg.cfg"
      - "output/en_core_sci_lg_parser_tagger/model-best"
      - "assets/corpus_pubtator.txt"
      - "output/en_core_sci_lg_vectors"
    outputs:
      - "output/en_core_sci_lg_ner/model-best"

  - name: ner-train-specialized
    help: "Train the specialized NER models"
    script:
      - "spacy train configs/ner_bc5cdr.cfg --output output/en_ner_bc5cdr_md --code scispacy/base_project_code.py"
      - "spacy train configs/ner_bionlp13cg.cfg --output output/en_ner_bionlp13cg_md --code scispacy/base_project_code.py"
      - "spacy train configs/ner_craft.cfg --output output/en_ner_craft_md --code scispacy/base_project_code.py"
      - "spacy train configs/ner_jnlpba.cfg --output output/en_ner_jnlpba_md --code scispacy/base_project_code.py"
    deps:
      - "assets/corpus_pubtator.txt"
      - "assets/BC5CDR-IOB/train.tsv"
      - "assets/BC5CDR-IOB/devel.tsv"
      - "assets/BC5CDR-IOB/test.tsv"
      - "assets/JNLPBA-IOB/train.tsv"
      - "assets/JNLPBA-IOB/devel.tsv"
      - "assets/JNLPBA-IOB/test.tsv"
      - "assets/CRAFT-IOB/train.tsv"
      - "assets/CRAFT-IOB/devel.tsv"
      - "assets/CRAFT-IOB/test.tsv"
      - "assets/BioNLP13CG-IOB/train.tsv"
      - "assets/BioNLP13CG-IOB/devel.tsv"
      - "assets/BioNLP13CG-IOB/test.tsv"
      - "output/en_core_sci_md_parser_tagger/model-best"
    outputs:
      - "output/en_ner_bc5cdr_md/model-best"
      - "output/en_ner_bionlp13cg_md/model-best"
      - "output/en_ner_craft_md/model-best"
      - "output/en_ner_jnlpba_md/model-best"
  
  - name: evaluate-parser-tagger-sm
    help: "Evaluate the parser and tagger"
    script:
      - "spacy evaluate output/en_core_sci_sm_parser_tagger/model-best project_data/genia_test.spacy --output output/en_core_sci_sm_parser_tagger/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_sm_parser_tagger/model-best"
    outputs:
      - "output/en_core_sci_sm_parser_tagger/model_best_results.json"

  - name: evaluate-parser-tagger-md
    help: "Evaluate the parser and tagger"
    script:
      - "spacy evaluate output/en_core_sci_md_parser_tagger/model-best project_data/genia_test.spacy --output output/en_core_sci_md_parser_tagger/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_md_parser_tagger/model-best"
    outputs:
      - "output/en_core_sci_md_parser_tagger/model_best_results.json"

  - name: evaluate-parser-tagger-lg
    help: "Evaluate the parser and tagger"
    script:
      - "spacy evaluate output/en_core_sci_lg_parser_tagger/model-best project_data/genia_test.spacy --output output/en_core_sci_lg_parser_tagger/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_lg_parser_tagger/model-best"
    outputs:
      - "output/en_core_sci_lg_parser_tagger/model_best_results.json"
  
  - name: evaluate-ner-sm
    help: "Evaluate NER"
    script:
      - "python scripts/evaluate_ner.py --model_path output/en_core_sci_sm_ner/model-best --dataset medmentions-test --output output/en_core_sci_sm_ner/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_sm_ner"
      - "assets/corpus_pubtator.txt"
    outputs:
      - "output/en_core_sci_sm_ner/model_best_results.json"

  - name: evaluate-ner-md
    help: "Evaluate NER"
    script:
      - "python scripts/evaluate_ner.py --model_path output/en_core_sci_md_ner/model-best --dataset medmentions-test --output output/en_core_sci_md_ner/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_md_ner"
      - "assets/corpus_pubtator.txt"
    outputs:
      - "output/en_core_sci_md_ner/model_best_results.json"

  - name: evaluate-ner-lg
    help: "Evaluate NER"
    script:
      - "python scripts/evaluate_ner.py --model_path output/en_core_sci_lg_ner/model-best --dataset medmentions-test --output output/en_core_sci_lg_ner/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_core_sci_lg_ner"
      - "assets/corpus_pubtator.txt"
    outputs:
      - "output/en_core_sci_lg_ner/model_best_results.json"
  
  - name: evaluate-specialized-ner
    help: "Evaluate specialize NER"
    script:
      - "python scripts/evaluate_ner.py --model_path output/en_ner_bc5cdr_md/model-best --dataset assets/BC5CDR-IOB/test.tsv --output output/en_ner_bc5cdr_md/model_best_results.json --code scispacy/base_project_code.py"
      - "python scripts/evaluate_ner.py --model_path output/en_ner_bionlp13cg_md/model-best --dataset assets/JNLPBA-IOB/test.tsv --output output/en_ner_bionlp13cg_md/model_best_results.json --code scispacy/base_project_code.py"
      - "python scripts/evaluate_ner.py --model_path output/en_ner_craft_md/model-best --dataset assets/CRAFT-IOB/test.tsv --output output/en_ner_craft_md/model_best_results.json --code scispacy/base_project_code.py"
      - "python scripts/evaluate_ner.py --model_path output/en_ner_jnlpba_md/model-best --dataset assets/BioNLP13CG-IOB/test.tsv --output output/en_ner_jnlpba_md/model_best_results.json --code scispacy/base_project_code.py"
    deps:
      - "output/en_ner_bc5cdr_md/model-best"
      - "output/en_ner_bionlp13cg_md/model-best"
      - "output/en_ner_craft_md/model-best"
      - "output/en_ner_jnlpba_md/model-best"
      - "assets/BC5CDR-IOB/test.tsv"
      - "assets/JNLPBA-IOB/test.tsv"
      - "assets/CRAFT-IOB/test.tsv"
      - "assets/BioNLP13CG-IOB/test.tsv"
    outputs:
      - "output/en_ner_bc5cdr_md/model_best_results.json"
      - "output/en_ner_bionlp13cg_md/model_best_results.json"
      - "output/en_ner_craft_md/model_best_results.json"
      - "output/en_ner_jnlpba_md/model_best_results.json"

  # TODOs: evaluate everything, package command, another evaluate of the package, twiddle params, maybe add a command for uploading models and releasing?